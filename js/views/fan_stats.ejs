<html>
<head>
    <meta charset="UTF-8">
    <title>Fan Speed Statistics</title>
    <!--Load the AJAX API-->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>

<body>
<div style="width: 70%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"><canvas id="fanChart"></canvas></div>
<script>
    const ctx = document.getElementById('fanChart').getContext("2d");

    const fan_graph = new Chart(ctx, {
        type: "line",
        data: {
            labels: [],
            datasets: [{
                data: [],
                borderColor: "green",
                fill: false,
                label: "Fan Speed Percentage"
            }]
        },
        options: {
            scales: {
                y: {
                    suggestedMin: 0,
                    suggestedMax: 100
                },
                x:{
                    ticks: {
                        callback: function (val, index) {
                            console.log(this.getLabelForValue(val));
                            const time = new Date(this.getLabelForValue(val));
                            const d = (time.getDate() < 10) ? "0" + time.getDate() : time.getDate();
                            const mo = (time.getMonth() < 10) ? "0" + time.getMonth() : time.getMonth();
                            const y = (time.getFullYear() < 10) ? "0" + time.getFullYear() : time.getFullYear();
                            const h = (time.getHours() < 10) ? "0" + time.getHours() : time.getHours();
                            const m = (time.getMinutes() < 10) ? "0" + time.getMinutes() : time.getMinutes();
                            const s = (time.getSeconds() < 10) ? "0" + time.getSeconds() : time.getSeconds();
                            return d + "/" + mo + "/" + y + "\n" + h + ":" + m + ":" + s;

                        }
                    }
                }
            },
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: "Fan value",


                }
            }
        }
    });

    const read_data = () => {
        fetch('/mutable-data').then(tmp => tmp.json()).then(data => {


            fan_graph.data.labels.push(data.timestamp);
            fan_graph.data.datasets[0].data.push(data.speed);

            // re-render the chart
            fan_graph.update();


        });
    }

    setInterval(read_data,2000);

</script>
</body>
</html>
